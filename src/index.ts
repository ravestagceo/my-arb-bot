import { createKeypairFromPrivateKey, saveKeypairToFile } from './keypair';
import { Connection, LAMPORTS_PER_SOL } from '@solana/web3.js';

// –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á 
const privateKeyBase58 = '3fadotsLpUpgdpyk9VVtE25X5ZUaDgcbACFFPeESWdwjM6B1DBs8SHNjAyTbbjXKvfXs1ZN852ZE1U7346SmM8HL';

async function main() {
  console.log('üü¢ –°–æ–∑–¥–∞–µ–º Solana Keypair –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...');

  try {
    // –°–æ–∑–¥–∞–µ–º keypair –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    const keypair = createKeypairFromPrivateKey(privateKeyBase58);
    
    // –í—ã–≤–æ–¥–∏–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
    console.log(`‚úÖ Keypair —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);
    console.log(`üìù –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: ${keypair.publicKey.toBase58()}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º keypair –≤ —Ñ–∞–π–ª
    const keypairPath = './wallet.json';
    saveKeypairToFile(keypair, keypairPath);
    console.log(`üíæ Keypair —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: ${keypairPath}`);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Solana devnet –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
    const connection = new Connection('https://api.devnet.solana.com', 'confirmed');
    const balance = await connection.getBalance(keypair.publicKey);
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å: ${balance / LAMPORTS_PER_SOL} SOL`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Keypair:', error);
  }
}

main();
